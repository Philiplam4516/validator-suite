# This is the main configuration file for the application.
# ~~~~~

application.langs="en,en-US"

application.context="/suite/"

application {
  timeout = "15s"
  mongodb {
    node = "localhost:27017"
    db-name = "vs-test"
  }
  graphite-reporter {
    enable = true
    period = "10s"
    host = "booberella.w3.org"
    port = 2003
    prefix = "test-"
  }
  assertor {
    http-client {
      timeout = 3000
    }
    i18n-checker {
      url = "http://qa-dev.w3.org/i18n-checker-test/check"
    }
    local-validator {
      port = 10001
      markup-validator {
        url = "http://validator.w3.org/check"
        check {
          enable = true
          timeout = 3000
          binary = "/home/betehess/projects/markup-validator/httpd/cgi-bin/check"
          conf = "/home/betehess_unencrypted/projects/markup-validator/htdocs/config/validator.conf"
        }
      }
    }
  }
  http-client {
    timeout = 30000
    maximum-connections-total = 1000
    maximum-connectionsper-host = 15
  }
  http-cache {
    enable = true
    clean-at-startup = true
    directory = "./http-cache"
    use-token = true
  }
  vs {
    reactivemongo-dispatcher {
      mailbox-type = org.w3.vs.actor.JobActorMailbox
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 2.0
        parallelism-max = 10
      }
      throughput = 1
    }
    http-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 2.0
        parallelism-max = 10
      }
      throughput = 1
    }
    assertor-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        core-pool-size-min = 5
        core-pool-size-factor = 2.0
        core-pool-size-max = 20
      }
      throughput = 1
    }
  }
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="hSRsmEkK1hd]d40cS6iQ;HxoX7/hDLT@x:87IG:KoSFxAEiO=siPilyYgV>X0>ZC"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

#default timeout for promises
promise.akka.actor.typed.timeout=60s

# Cache
cache.user.expire=300

# Support email
support.email="team-vs@w3.org"

akka {
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = WARNING
    
    actor {
        deployment {
            /actions {
                router = round-robin
                nr-of-instances = 24
            }
        }
        retrieveBodyParserTimeout = 1 second
        actions-dispatcher = {
            fork-join-executor {
                parallelism-factor = 1.0
                parallelism-max = 24
            }
        }
        promises-dispatcher = {
            fork-join-executor {
                parallelism-factor = 1.0
                parallelism-max = 24
            }
        }
        websockets-dispatcher = {
            fork-join-executor {
                parallelism-factor = 1.0
                parallelism-max = 24
            }
        }
        default-dispatcher = {
            fork-join-executor {
                parallelism-factor = 1.0
                parallelism-max = 24
            }
        }
    }
}
