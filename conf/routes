# Routes
# This file defines all application routes (Higher priority routes first)

# Application
GET     /                                           controllers.Application.index
GET     /login                                      controllers.Application.login
POST    /login                                      controllers.Application.authenticate
POST    /logout                                     controllers.Application.logout
GET     /register                                   controllers.Application.register
POST    /register                                   controllers.Application.registerAction

# Jobs
GET     /jobs/                                      controllers.Jobs.index
POST    /jobs/                                      controllers.Jobs.create
GET     /jobs/new                                   controllers.Jobs.newJob
GET     /jobs/socket/:socket                        controllers.Jobs.socket(socket: SocketType.SocketType)

GET     /jobs/purchase                              controllers.OneTimeJob.newJob
POST    /jobs/purchase                              controllers.OneTimeJob.purchase
POST    /purchase/callback                          controllers.OneTimeJob.callback

# Job
GET     /jobs/:job/                                 controllers.Job.get(job: JobId)
POST    /jobs/:job/                                 controllers.Job.dispatcher(job: JobId)
# GET     /jobs/:job/edit                           controllers.Job.edit(job: JobId)
GET     /jobs/:job/socket/:socket                   controllers.Job.socket(job: JobId, socket: SocketType)

# Job/grouped
GET     /jobs/:job/messages/                         controllers.GroupedAssertions.index(job: JobId)
GET     /jobs/:job/messages/socket/:socket           controllers.GroupedAssertions.socket(job: JobId, socket: SocketType)

# Job/assertions
GET     /jobs/:job/assertions/                      controllers.Assertions.index(job: JobId, resource: URL)
GET     /jobs/:job/assertions/socket/:socket        controllers.Assertions.socket(job: JobId, resource: URL, socket: SocketType)

# Job/assertors
#GET     /jobs/:job/assertors/                       controllers.Assertors.index(job: JobId, resource: Option[URL])
#GET     /jobs/:job/assertors/socket/:socket         controllers.Assertors.socket(job: JobId, resource: Option[URL], socket: SocketType)

# Job/resources
GET     /jobs/:job/resources/                       controllers.Resources.index(job: JobId, resource: Option[URL])
GET     /jobs/:job/resources/socket/:socket         controllers.Resources.socket(job: JobId, resource: Option[URL], socket: SocketType)

# Administration
GET     /admin/                                     controllers.Administration.index()
GET     /admin/console                              controllers.Administration.console()
GET     /admin/console/socket                       controllers.Administration.socket()
POST    /admin/jobs                                 controllers.Administration.jobsPost()
POST    /admin/users                                controllers.Administration.usersPost()
POST    /admin/migration                            controllers.Administration.migration()

##########################

# Adds an Assets controller to expose javascript sources directly during development
# Because Play changes the signature of routes.Assets.at() depending on whether there is a single assets controller or
# more i added a dummy controller that serves files from nowhere. The switch has to be done manually.
#GET     /no_folder/*file                                       controllers.Assets.at(path="/no_folder", file)
GET     /dev/scripts/*file                                controllers.Assets.at(path="/app/assets/scripts", file)

# Map static resources from the /public folder to the /assets URL path
GET     /*file                                     controllers.Assets.at(path="/public", file)